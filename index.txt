JS -> JS Engine -> Browser(V8 Engine,C++) -> HTML, CSS, JS JS file can be run on
browser as well as on node because node also use V8 engine command -- node
app.js to run code without adding html file Module -- reusable piece of code
across all node application. and called by CommonJS require(path) ,
module.export = fxnName, if you passs nothing in moduke then it will return an
empty object emit is used to trigger an event Â· on is used to add a callback
function that's going to be executed when the event is triggered.


type node in command and now u r in node environment(world)
u will reach to node repl(read eval(evaluate) print loop) and u can write js code here.
In node --window and document is not available because it is not a browser. but global is present

react--component,
node--module.


nodemon, node --watch

npm view expree versions.

1.0.0 --> major_versions.minor_versions.patch_versions

npm install express@1.0.0
npm install express@1.0.0 --save-exact
npm install express@^1.0.0
npm install express@~1.0.0
npm install express@latest
npm install express@next

npm outdated <package_name>
npm update <package_name>
npm remove <package_name>

npx npm-check-updates -u

//! global install

npm i -g nodemon
npm i -g nodemon@latest

//! local install

npm i nodemon
npm i nodemon@latest

v8 --> handle sync code and convert it into machine code.
Libuv(C library)--> handle async code and convert it into machine code. provides eventloop and thread pool.